[
    {
        "id": "1",
        "title": "Introduction to JavaScript",
        "description": "This lesson covers the basics of JavaScript, including syntax, variables, and data types, setting a foundation for deeper understanding.",
        "sections": [
            {
                "content": "JavaScript is a versatile programming language primarily used for web development. It allows developers to create dynamic, interactive web applications.\n\nHere are some key things to know about JavaScript:\n- It is a high-level, interpreted language.\n- JavaScript can be used on both the client-side (in browsers) and server-side (with environments like Node.js).\n- It is the backbone of web technologies, alongside HTML and CSS.",
                "exercises": []
            },
            {
                "content": "Let's start with some basic syntax in JavaScript.\n\n1. Comments: You can write comments to explain your code. Comments are ignored by the browser.\n   - Single line comment: `// This is a comment`\n   - Multi-line comment: `/* This is a comment */`\n\n2. Console: `console.log()` is used to print messages to the browser's console, often for debugging purposes.",
                "codeExample": "// Single line comment\nconsole.log('Hello, JavaScript!');  // Prints: Hello, JavaScript!\n\n/* Multi-line comment */\nconsole.log('This is a multi-line comment example');",
                "exercises": [
                    {
                        "question": "Write a program that prints \"Welcome to JavaScript\" to the console.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  const logs = consoleLog.join('\\n');\n  return logs === 'Welcome to JavaScript';\n})();"
                    }
                ]
            }
        ],
        "difficulty": "Beginner",
        "durationMinutes": 15,
        "icon": {
            "codePoint": 61731,
            "fontFamily": "Feather"
        }
    },
    {
        "id": "2",
        "title": "Variables and Constants",
        "description": "Learn how to declare and use variables and constants in JavaScript, understanding their differences and best practices.",
        "sections": [
            {
                "content": "Variables and constants are fundamental concepts in JavaScript. They allow you to store and manipulate data in your programs.\n\n1. Variables (let):\n   - Variables are containers for storing data values.\n   - They can be declared using the 'let' keyword.\n   - The value of a variable can be changed after it's declared.\n\n2. Constants (const):\n   - Constants are also used to store data, but their value cannot be changed once set.\n   - They are declared using the 'const' keyword.\n   - Use constants for values that should not be reassigned.\n\n3. var (older way):\n   - 'var' is an older way to declare variables in JavaScript.\n   - It's function-scoped rather than block-scoped like 'let' and 'const'.\n   - It's generally recommended to use 'let' and 'const' in modern JavaScript.",
                "codeExample": "// Variable declaration and assignment\nlet age = 25;\nconsole.log(age); // Output: 25\n\nage = 26; // You can change the value of a variable\nconsole.log(age); // Output: 26\n\n// Constant declaration\nconst PI = 3.14159;\nconsole.log(PI); // Output: 3.14159\n\n// PI = 3.14; // This would cause an error because you can't reassign a constant\n\n// Using var (older way)\nvar name = \"John\";\nconsole.log(name); // Output: John",
                "exercises": [
                    {
                        "question": "Declare a variable named \"score\" and assign it the value 100.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return score === 100;\n})();"
                    },
                    {
                        "question": "Declare a constant named \"MAX_LEVEL\" and assign it the value 50.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return MAX_LEVEL === 50 && /const MAX_LEVEL/.test(code);\n})();"
                    }
                ]
            },
            {
                "content": "Best Practices for Using Variables and Constants:\n\n1. Use descriptive names: Choose variable and constant names that clearly describe their purpose.\n2. Use camelCase for variables and constants: e.g., userAge, maxScore.\n3. Use UPPERCASE_WITH_UNDERSCORES for constants that are truly fixed values: e.g., MAX_ITEMS, PI.\n4. Prefer 'const' over 'let' when the value won't change: This helps prevent accidental reassignment.\n5. Declare variables at the top of their scope: This makes it easier to see all variables used in a block.\n6. Avoid using 'var': Stick to 'let' and 'const' for clearer scoping rules.\n\nRemember: JavaScript is a dynamically typed language, which means you don't need to specify the data type when declaring variables or constants. The type is inferred from the assigned value.",
                "codeExample": "// Good practices\nconst MAX_USERS = 100;\nlet currentUserCount = 0;\n\nfunction addUser(username) {\n  if (currentUserCount < MAX_USERS) {\n    // Add user logic here\n    currentUserCount++;\n    console.log(`Added user: ${username}`);\n  } else {\n    console.log(\"Cannot add user. Maximum user limit reached.\");\n  }\n}\n\naddUser(\"Alice\");\nconsole.log(currentUserCount); // Output: 1\n\n// Bad practice (avoid using var)\nvar temp = 72; // Use 'let' instead",
                "exercises": [
                    {
                        "question": "Declare a variable for a user's age and a constant for the minimum voting age. Then write an if statement to check if the user can vote.",
                        "initialCode": "// Declare your variables and constant here\n\n// Write your if statement here",
                        "validate": "const isValid = (function() {\n  let varMatch = code.match(/let (\\w+) =/);\n  let constMatch = code.match(/const (\\w+) =/);\n\n  if (!varMatch || !constMatch) return false;\n\n  let varName = varMatch[1];\n  let constName = constMatch[1];\n\n  let varValue = eval(varName);\n  let constValue = eval(constName);\n\n  let isVarNumber = typeof varValue === 'number';\n  let isConstNumber = typeof constValue === 'number';\n\n  let isIfStatement = /if \\(.+?\\) {/.test(code);\n  let isConditionCorrect = code.includes(`if (${varName} >= ${constName})`);\n\n  return isVarNumber && isConstNumber && isIfStatement && isConditionCorrect;\n})();"
                    }
                ]
            }
        ],
        "difficulty": "Beginner",
        "durationMinutes": 25,
        "icon": {
            "codePoint": 61780,
            "fontFamily": "Feather"
        }
    },
    {
        "id": "3",
        "title": "Data Types and Structures",
        "description": "Explore the fundamental data types in JavaScript and learn about basic data structures like arrays and objects.",
        "sections": [
            {
                "content": "JavaScript has several basic data types that are essential to understand:\n\n1. Primitive Data Types:\n   - Number: Represents both integer and floating-point numbers.\n   - String: Represents textual data, enclosed in single or double quotes.\n   - Boolean: Represents a logical entity with two values: true or false.\n   - Undefined: Represents a variable that has been declared but not assigned a value.\n   - Null: Represents a deliberate non-value or absence of any object value.\n\n2. Complex Data Types:\n   - Object: A collection of key-value pairs.\n   - Array: An ordered list of values, a special type of object.\n\nUnderstanding these data types is crucial for effective JavaScript programming.",
                "codeExample": "// Number\nlet age = 25;\nlet price = 9.99;\n\n// String\nlet name = \"Alice\";\nlet greeting = 'Hello, World!';\n\n// Boolean\nlet isStudent = true;\nlet hasLicense = false;\n\n// Undefined\nlet job;\n\n// Null\nlet salary = null;\n\n// Checking types\nconsole.log(typeof age);       // \"number\"\nconsole.log(typeof name);      // \"string\"\nconsole.log(typeof isStudent); // \"boolean\"\nconsole.log(typeof job);       // \"undefined\"\nconsole.log(typeof salary);    // \"object\" (this is a quirk in JavaScript)",
                "exercises": [
                    {
                        "question": "Declare a variable called \"temperature\" and assign it the value 72.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return temperature === 72;\n})();"
                    },
                    {
                        "question": "Create a string variable called \"city\" with the value \"New York\".",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return city === \"New York\";\n})();"
                    }
                ]
            },
            {
                "content": "Arrays and Objects are two important data structures in JavaScript:\n\n1. Arrays:\n   - Arrays are used to store multiple values in a single variable.\n   - They are created using square brackets [].\n   - Array elements are accessed using their index (starting from 0).\n\n2. Objects:\n   - Objects are used to store collections of data in key-value pairs.\n   - They are created using curly braces {}.\n   - Object properties can be accessed using dot notation or bracket notation.\n\nBoth arrays and objects can store different types of data.",
                "codeExample": "// Arrays\nlet fruits = [\"apple\", \"banana\", \"orange\"];\nconsole.log(fruits[0]);  // \"apple\"\nconsole.log(fruits[1]);  // \"banana\"\nconsole.log(fruits.length);  // 3\n\n// Objects\nlet person = {\n  name: \"Bob\",\n  age: 30,\n  isStudent: false\n};\n\nconsole.log(person.name);  // \"Bob\"\nconsole.log(person[\"age\"]);  // 30\n\n// Adding new elements\nfruits[3] = \"grape\";\nperson.city = \"London\";\n\nconsole.log(fruits[3]);  // \"grape\"\nconsole.log(person.city);  // \"London\"",
                "exercises": [
                    {
                        "question": "Create an array called \"colors\" with three color names of your choice.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return colors.length === 3 && Array.isArray(colors);\n})();"
                    },
                    {
                        "question": "Create an object called \"book\" with properties for title and author.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return book.hasOwnProperty(\"title\") && book.hasOwnProperty(\"author\");\n})();"
                    }
                ]
            }
        ],
        "difficulty": "Beginner",
        "durationMinutes": 25,
        "icon": {
            "codePoint": 61835,
            "fontFamily": "Feather"
        }
    },
    {
        "id": "4",
        "title": "Operators and Expressions",
        "description": "Learn about different types of operators in JavaScript and how to use them to form expressions. Understand arithmetic, comparison, and logical operators.",
        "sections": [
            {
                "content": "Operators in JavaScript are symbols that perform operations on operands (values and variables). Expressions are combinations of values, variables, and operators that can be evaluated to produce a result.\n\n1. Arithmetic Operators:\n   - Addition (+)\n   - Subtraction (-)\n   - Multiplication (*)\n   - Division (/)\n   - Modulus (%) - returns the remainder of a division\n   - Increment (++) - increases a value by 1\n   - Decrement (--) - decreases a value by 1\n\n2. Assignment Operators:\n   - Assign a value (=)\n   - Add and assign (+=)\n   - Subtract and assign (-=)\n   - Multiply and assign (*=)\n   - Divide and assign (/=)\n\nLet's see these operators in action:",
                "codeExample": "// Arithmetic operators\nlet a = 10;\nlet b = 3;\n\nconsole.log(a + b);  // 13\nconsole.log(a - b);  // 7\nconsole.log(a * b);  // 30\nconsole.log(a / b);  // 3.3333...\nconsole.log(a % b);  // 1 (remainder of 10 divided by 3)\n\nlet c = 5;\nc++;  // Increment\nconsole.log(c);  // 6\nc--;  // Decrement\nconsole.log(c);  // 5\n\n// Assignment operators\nlet x = 20;\nx += 5;  // Same as: x = x + 5\nconsole.log(x);  // 25\n\nx -= 3;  // Same as: x = x - 3\nconsole.log(x);  // 22\n\nx *= 2;  // Same as: x = x * 2\nconsole.log(x);  // 44\n\nx /= 4;  // Same as: x = x / 4\nconsole.log(x);  // 11",
                "exercises": [
                    {
                        "question": "Create two variables, \"num1\" with value 15 and \"num2\" with value 4. Then create a third variable \"result\" that stores the remainder when num1 is divided by num2.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return result === 3 && /let result = num1 % num2/.test(code);\n})();"
                    },
                    {
                        "question": "Create a variable \"count\" with initial value 10. Use the increment operator to increase its value by 1, then multiply the result by 3 using the multiplication assignment operator.",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return count === 33 \n    && /let count = 10;/.test(code) \n    && /count\\+\\+/.test(code) \n    && (/count \\*= 3/.test(code) || /count \\* 3/.test(code));\n})();"
                    }
                ]
            },
            {
                "content": "3. Comparison Operators:\n   - Equal to (==)\n   - Strict equal to (===) - compares both value and type\n   - Not equal to (!=)\n   - Strict not equal to (!==)\n   - Greater than (>)\n   - Less than (<)\n   - Greater than or equal to (>=)\n   - Less than or equal to (<=)\n\n4. Logical Operators:\n   - AND (&&) - returns true if both operands are true\n   - OR (||) - returns true if at least one operand is true\n   - NOT (!) - reverses the boolean value\n\nThese operators are often used in conditional statements, which we'll cover in more detail in future lessons.",
                "codeExample": "// Comparison operators\nlet p = 5;\nlet q = \"5\";\n\nconsole.log(p == q);   // true (values are equal)\nconsole.log(p === q);  // false (values are equal, but types are different)\nconsole.log(p != q);   // false\nconsole.log(p !== q);  // true\n\nconsole.log(p > 3);    // true\nconsole.log(p < 3);    // false\nconsole.log(p >= 5);   // true\nconsole.log(p <= 5);   // true\n\n// Logical operators\nlet isAdult = true;\nlet hasLicense = false;\n\nconsole.log(isAdult && hasLicense);  // false\nconsole.log(isAdult || hasLicense);  // true\nconsole.log(!isAdult);               // false\n\n// Combining operators\nlet age = 25;\nlet hasPermission = true;\nlet canAccess = age >= 18 && hasPermission;\nconsole.log(canAccess);  // true",
                "exercises": [
                    {
                        "question": "Create two variables: \"num\" with value 10 and \"text\" with value \"10\". Use the strict equality operator to compare them and store the result in a variable called \"isStrictlyEqual\".",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return isStrictlyEqual === false \n    && /===/.test(code) \n    && num === 10 \n    && text === \"10\";\n})();"
                    },
                    {
                        "question": "Create two boolean variables: \"isSunny\" (true) and \"isWarm\" (false). Use the logical OR operator to check if either condition is true, and store the result in a variable called \"niceWeather\".",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return niceWeather === true \n    && /\\|\\|/.test(code) \n    && isSunny === true \n    && isWarm === false;\n})();"
                    }
                ]
            }
        ],
        "difficulty": "Beginner",
        "durationMinutes": 30,
        "icon": {
            "codePoint": 61888,
            "fontFamily": "Feather"
        }
    },
    {
        "id": "5",
        "title": "Working with Strings",
        "description": "Learn how to create, manipulate, and work with strings in JavaScript. Understand basic string operations and commonly used string methods.",
        "sections": [
            {
                "content": "Strings in JavaScript are used to represent text. They can be created using single quotes (''), double quotes (\"\"), or backticks (``).\n\nKey points about strings:\n1. Strings are immutable, meaning once created, they cannot be changed.\n2. JavaScript provides many built-in methods to work with strings.\n3. String indices start at 0 for the first character.\n\nLet's explore some basic string operations:",
                "codeExample": "// Creating strings\nlet singleQuotes = 'Hello';\nlet doubleQuotes = \"World\";\nlet backticks = `JavaScript`;\n\n// Concatenation\nlet greeting = singleQuotes + \" \" + doubleQuotes;\nconsole.log(greeting);  // \"Hello World\"\n\n// String length\nconsole.log(greeting.length);  // 11\n\n// Accessing characters\nconsole.log(greeting[0]);  // \"H\"\nconsole.log(greeting[6]);  // \"W\"\n\n// Strings are immutable\ngreeting[0] = \"h\";  // This doesn't change the string\nconsole.log(greeting);  // Still \"Hello World\"\n\n// Template literals (with backticks)\nlet name = \"Alice\";\nlet message = `Welcome, ${name}!`;\nconsole.log(message);  // \"Welcome, Alice!\"",
                "exercises": [
                    {
                        "question": "Create a string variable called \"language\" with the value \"JavaScript\".",
                        "initialCode": "// Write your code here",
                        "validate": "const isValid = (function() {\n  return language === \"JavaScript\";\n})();"
                    },
                    {
                        "question": "Using the \"language\" variable, create a new string that says \"I am learning JavaScript!\" and store it in a variable called \"learningMessage\".",
                        "initialCode": "let language = \"JavaScript\";\n// Write your code here",
                        "validate": "const isValid = (function() {\n  return learningMessage === \"I am learning JavaScript!\"\n    && (/\\+/.test(code) || /\\$\\{language\\}/.test(code));\n})();"
                    }
                ]
            },
            {
                "content": "JavaScript provides many useful methods for working with strings. Here are some commonly used ones:\n\n1. toUpperCase() and toLowerCase(): Convert a string to all uppercase or lowercase.\n2. trim(): Removes whitespace from both ends of a string.\n3. substring(start, end): Extracts a portion of a string between two indices.\n4. indexOf(substring): Returns the index of the first occurrence of a substring.\n5. replace(search, replacement): Replaces a specified value with another value in a string.\n\nLet's see these methods in action:",
                "codeExample": "let text = \"  Hello, World!  \";\n\n// toUpperCase() and toLowerCase()\nconsole.log(text.toUpperCase());  // \"  HELLO, WORLD!  \"\nconsole.log(text.toLowerCase());  // \"  hello, world!  \"\n\n// trim()\nconsole.log(text.trim());  // \"Hello, World!\"\n\n// substring(start, end)\nconsole.log(text.substring(2, 7));  // \"Hello\"\n\n// indexOf(substring)\nconsole.log(text.indexOf(\"World\"));  // 9\n\n// replace(search, replacement)\nconsole.log(text.replace(\"World\", \"JavaScript\"));  // \"  Hello, JavaScript!  \"\n\n// Chaining methods\nlet result = text.trim().toLowerCase().replace(\"world\", \"javascript\");\nconsole.log(result);  // \"hello, javascript!\"",
                "exercises": [
                    {
                        "question": "Create a variable called \"email\" with the value \"   USER@EXAMPLE.COM   \". Then, create a new variable called \"cleanEmail\" that contains the email in lowercase with no leading or trailing spaces.",
                        "initialCode": "let email = \"   USER@EXAMPLE.COM   \";\n// Write your code here",
                        "validate": "const isValid = (function() {\n  return cleanEmail === \"user@example.com\" && /trim/.test(code) && /toLowerCase/.test(code);\n})();"
                    },
                    {
                        "question": "Using the string \"JavaScript is awesome\", create a new string that replaces \"awesome\" with \"amazing\" and store it in a variable called \"newPhrase\".",
                        "initialCode": "let phrase = \"JavaScript is awesome\";\n// Write your code here",
                        "validate": "const isValid = (function() {\n  return newPhrase === \"JavaScript is amazing\" && /replace/.test(code);\n})();"
                    }
                ]
            }
        ],
        "difficulty": "Beginner",
        "durationMinutes": 25,
        "icon": {
            "codePoint": 61950,
            "fontFamily": "Feather"
        }
    }
]